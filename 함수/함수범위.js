// 함수 범위 함수 스코프라고도 합니다.
// 범위는 소위 변수가시성을 참조합니다. 기본적으로 변수를 자바스크립트가 어느 부분에 정의하느냐가 엑세스 지점을 결정합니다.
// 변수와 함수를 열린 공간에 넣을지 아니면 함수안의 중첩 함수를 넣을지!
// 이 선택이 나중에 어디서 변수를 쓰느냐에 큰 영향을 미칩니다.


// 함수안에서 선언한 변수는 함수로 범위가 한정되어 있습니다.

function collectEggs(){
    let totalEggs = 6
    console.log(totalEggs)
}




// 전역변수 개념
// 기존의 변수를 업데이트 하는건 아주 흔한일은 아닙니다! 
 

function nakyoung () {
    jaeho = 10;
}

console.log(jaeho)
console.log(jaeho)


// 보통은 내부 변수를 씁니다.
// 대부분의 함수는 일종의 독립된 기계처럼 일력 값을 취하고 출력값을 내놓습니다.

function mimi(){
    let a = 10;
    console.log(a)
}

mimi()


let c = 20

function navi(){
    // let c = 100;
    console.log(c)
}


navi()

// 자바스크립트는 유리구슬 속 한정된 함수안에 같은 이름으로 정의된 변수가 있을경우 그 변수를 먼저 참조합니다.
// 하지만 유리구슬 안에 같은 이름의 변수가 없으면 다른곳의 같은 이름 변수를 찾습니다.