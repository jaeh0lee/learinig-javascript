 // slice 는 배열의 일부를 복사하는 방법입니다.
 // slice는 시작과 끝을 정할수 있고 이건 필수는 아닙니다 
 // slice()에 아무값도 넣지 않으면 새로운 배열을 복사합니다.

 // slice의 시작은 index처럼 0부터 숫자를 새기 시작합니다
 // start만 정한다면 배열의 끝까지 다 표시가 됩니다.
 // slice는 비파괴 메서드 입니다.

 let colors = ["red", "orange", "yellow", "green", "blue", "indigo", "violet"]
 colors.slice() // colors와 똑같은 배열을 복사 
 colors.slice(3) // index의 3번째부터 배열이 출력됨 // green부터 ~ violet까지 

 // 시작점은 인덱스에 포함하지만 정지점은 포함하지 않습니다

 colors.slice(0, 3) // red ~ yellow 
 
 // index를 음수로 쓰면 배열의 끝에서부터 시작을 합니다.
 colors.slice(-3) // blue



 // splice 는 기존요소들을 제거하거나 대체하거나 아니면 새로운 요소둘을 추가해서 배열의 내용을 저장합니다.
 // spice는 언제나 원본에서 사용됩니다.
 
 colors.splice(5, 1) // 제거한 배열을 표시하며 1개 이상을 제거할수 있습니다.
 // 원본은 훼손하는 파괴적 메서드 입니다.

 colors.splice(0, 2) // 0부터 다음 배열의 값까지 제거합니다.

 // 이번에는 splice로 값을 추가하는 방법입니다.
 colors.splice(1,0,"red-orange") // 값을 넣을 인덱스 위치를 작성하고 제거를 안할거니까 0을기입하고 이후에 넣을 값을 작성해주면 됩니다. 

 colors.splice(1,0,"red-orange", "blue-light", "pink-red") // 여러개의 배열의 값을 넣을수도 있습니다.

 // 배열 중간에 값을 삽입할때 splice를 사용하는건 드물긴 합니다.


 // sort 배열을 줄이는 메서드 입니다. 
 // 괄호안에 아무것도 안넣고 sort를 호출한다면 모든것을 문자열로 변환합니다. 그리고 각 문자열의
 // UTF 16 코드 유닛값을 비교합니다, 기초코드넘버는 각 문자열마다 주어집니다.

 let scores = [1, 123, 100, 2500, 9, 12, 0, 34]

 scores.sort() // [0, 1, 100, 12, 123, 2500, 34, 9]

 // 값이 크거나 작은순으로 정렬될거라 생각하지만 이상한 결과로 값이 출력되었습니다.
 // 해당 이유는 sort는 앞에 숫자만 확인하여 정렬합니다 0, 1, 1, 1, 2, 3, 9
 
 